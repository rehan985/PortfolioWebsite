name: Secure Pipeline Deploy to EC2

on:
  push:
    branches:
      - master

jobs:
  # Job 1: Checkout code and setup environment
  setup-environment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

  # Job 2: Run Security Scans
  security-scans:
    runs-on: ubuntu-latest
    needs: setup-environment

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run HawkScan
        uses: stackhawk/hawkscan-action@v2
        with:
          apiKey: ${{ secrets.HAWK_API_KEY }}

      - name: Run FOSSA Scan
        uses: fossas/fossa-action@v1
        with:
          api-key: ${{ secrets.fossaApiKey }}

      - name: Run FOSSA Test
        uses: fossas/fossa-action@v1
        with:
          api-key: ${{ secrets.fossaApiKey }}
          run-tests: true
        continue-on-error: true

  # Job 3: Build Application
  build:
    runs-on: ubuntu-latest
    needs: setup-environment

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies and build
        run: |
          npm install 
          npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build/

  # Job 4: Deploy to EC2
  # Job 4: Deploy to EC2
  deploy:
    runs-on: ubuntu-latest
    needs: [setup-environment, build,security-scans]

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo -e "StrictHostKeyChecking no\n" >> ~/.ssh/config

      - name: Deploy to EC2
        run: |
          
          scp -o StrictHostKeyChecking=no -r * ${{ secrets.EC2_INSTANCE_USER }}@${{ secrets.EC2_INSTANCE_IP }}:/home/ubuntu/
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_INSTANCE_USER }}@${{ secrets.EC2_INSTANCE_IP }} 'cd /home/ubuntu && pm2 delete react-build && pm2 serve build/ 3000 --name "react-build" --spa && exit'
